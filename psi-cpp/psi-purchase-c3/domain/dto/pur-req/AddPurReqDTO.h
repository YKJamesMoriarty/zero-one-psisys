#pragma once
#ifndef _ADD_PUR_REQ_DTO_
#define _ADD_PUR_REQ_DTO_

#include "../../GlobalInclude.h"
#include "../FileDTO.h"

//考虑到修改和添加采购订单的操作类似所以合并为一个DTO
//添加订单的DTO(不包括明细内容),同时由于有附件内容可能添加,所以继承FileDTO
class AddPurReqDTO :public FileDTO
{
	//单据编号
	CC_SYNTHESIZE(string, billNo, BillNo);
	//单据日期
	CC_SYNTHESIZE(string, billDate, BillDate);
	//源单类型
	CC_SYNTHESIZE(string, srcBillType, SrcBillType);
	//源单id
	CC_SYNTHESIZE(string, srcBillId, SrcBillId);
	//源单号
	CC_SYNTHESIZE(string, srcNo, SrcNo);
	//单据主题
	CC_SYNTHESIZE(string, subject, Subject);
	//是否红字
	CC_SYNTHESIZE(int, isRubric, IsRubric);
	//采购类型
	CC_SYNTHESIZE(string, purType, PurType);
	//需求部门
	CC_SYNTHESIZE(string, requester, Requester);
	//需求时间
	CC_SYNTHESIZE(string, requestTime, RequestTime);
	//数量
	CC_SYNTHESIZE(double, qty, Qty);
	//参考金额
	CC_SYNTHESIZE(double, amt, Amt);
	//已订数量
	CC_SYNTHESIZE(double, orderedQty, OrderedQty);
	//备注
	CC_SYNTHESIZE(string, remark, Remark);
	//是否自动生成
	CC_SYNTHESIZE(int, isAuto, IsAuto);
	//单据阶段
	CC_SYNTHESIZE(string, billStage, BillStage);
	//是否生效
	CC_SYNTHESIZE(int, isEffective, IsEffective);
	//生效时间
	CC_SYNTHESIZE(string, effectiveTime, EffectiveTime);
	//是否已关闭
	CC_SYNTHESIZE(int, isClosed, IsClosed);
	//是否作废
	CC_SYNTHESIZE(int, isVoided, IsVoided);
public:
	//绑定JSON转换方法
	friend void from_json(const json& j, AddPurReqDTO& t);
};

#endif // !_ADD_PUR_REQ_DTO_